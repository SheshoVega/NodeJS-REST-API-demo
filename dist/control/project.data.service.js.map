{"version":3,"sources":["../../src/control/project.data.service.js"],"names":["getProjects","callback","Project","find","sort","created_at","exec","getProject","id","findOne","_id","queryByArgs","params","Object","keys","length","query","$or","key","obj","push","toProject","body","title","type","tecnologies","state","product","createProject","project","create","deleteProject","deleteOne","updateProject","findOneAndUpdate","new","runValidators"],"mappings":";;;;;;;AAAA;;;;AAEA,SAASA,WAAT,CAAqBC,QAArB,EAA+B;AAC3BC,qBAAQC,IAAR,CAAa,EAAb,EAAiBC,IAAjB,CAAsB,EAACC,YAAY,CAAC,CAAd,EAAtB,EAAwCC,IAAxC,CAA6CL,QAA7C;AACH;;AAED,SAASM,UAAT,CAAoBC,EAApB,EAAwBP,QAAxB,EAAkC;AAC9BC,qBAAQO,OAAR,CAAgB,EAAEC,KAAKF,EAAP,EAAhB,EAA6BP,QAA7B;AACH;;AAED,SAASU,WAAT,CAAqBC,MAArB,EAA6BX,QAA7B,EAAuC;;AAEnC,QAAIY,OAAOC,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,KAA+B,CAAnC,EAAsC;AAClCb,yBAAQC,IAAR,CAAaS,MAAb,EAAqBX,QAArB;AACH,KAFD,MAEO;AACH,YAAIe,QAAQ,EAAEC,KAAK,EAAP,EAAZ;AACA,aAAK,IAAMC,GAAX,IAAkBN,MAAlB,EAA0B;AACtB,gBAAIO,0BAASD,GAAT,EAAeN,OAAOM,GAAP,CAAf,CAAJ;AACAF,kBAAMC,GAAN,CAAUG,IAAV,CAAeD,GAAf;AACH;AACDjB,yBAAQC,IAAR,CAAaa,KAAb,EAAoBf,QAApB;AACH;AAEJ;;AAED,SAASoB,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,WAAO;AACHZ,aAAKY,KAAKZ,GADP;AAEHa,eAAOD,KAAKC,KAFT;AAGHC,cAAMF,KAAKE,IAHR;AAIHC,qBAAaH,KAAKG,WAJf;AAKHC,eAAOJ,KAAKI,KALT;AAMHC,iBAASL,KAAKK;AANX,KAAP;AAQH;;AAED,SAASC,aAAT,CAAuBN,IAAvB,EAA6BrB,QAA7B,EAAuC;AACnC,QAAI4B,UAAU,yBAAWP,IAAX,CAAd;AACApB,qBAAQ4B,MAAR,CAAeD,OAAf,EAAwB5B,QAAxB;AACH;;AAED,SAAS8B,aAAT,CAAuBvB,EAAvB,EAA2BP,QAA3B,EAAqC;AACjCC,qBAAQ8B,SAAR,CAAkB,EAAEtB,KAAKF,EAAP,EAAlB,EAA+BP,QAA/B;AACH;;AAED,SAASgC,aAAT,CAAuBX,IAAvB,EAA6BrB,QAA7B,EAAuC;AACnC,QAAI4B,UAAUR,UAAUC,IAAV,CAAd;AACApB,qBAAQgC,gBAAR,CACI,EAAExB,KAAKmB,QAAQnB,GAAf,EADJ,EAEI;AACIa,eAAOM,QAAQN,KADnB;AAEIC,cAAMK,QAAQL,IAFlB;AAGIC,qBAAaI,QAAQJ,WAHzB;AAIIC,eAAOG,QAAQH,KAJnB;AAKIC,iBAASE,QAAQF;AALrB,KAFJ,EASI,EAAEQ,KAAK,IAAP,EAAaC,eAAe,IAA5B,EATJ,EAUInC,QAVJ;AAYH;;QAEQD,W,GAAAA,W;QAAaO,U,GAAAA,U;QAAYI,W,GAAAA,W;QAAaiB,a,GAAAA,a;QAAeG,a,GAAAA,a;QAAeE,a,GAAAA,a","file":"project.data.service.js","sourcesContent":["import { Project, newProject } from \"../models/project\";\n\nfunction getProjects(callback) {\n    Project.find({}).sort({created_at: -1}).exec(callback);\n};\n\nfunction getProject(id, callback) {\n    Project.findOne({ _id: id }, callback);\n};\n\nfunction queryByArgs(params, callback) {\n\n    if (Object.keys(params).length === 1) {\n        Project.find(params, callback);\n    } else {\n        let query = { $or: [] };\n        for (const key in params) {\n            let obj = { [key]: params[key] };\n            query.$or.push(obj);\n        }\n        Project.find(query, callback);\n    }\n\n};\n\nfunction toProject(body) {\n    return {\n        _id: body._id,\n        title: body.title,\n        type: body.type,\n        tecnologies: body.tecnologies,\n        state: body.state,\n        product: body.product\n    };\n}\n\nfunction createProject(body, callback) {\n    let project = newProject(body);\n    Project.create(project, callback);\n}\n\nfunction deleteProject(id, callback) {\n    Project.deleteOne({ _id: id }, callback);\n}\n\nfunction updateProject(body, callback) {\n    let project = toProject(body);\n    Project.findOneAndUpdate(\n        { _id: project._id },\n        {\n            title: project.title, \n            type: project.type,\n            tecnologies: project.tecnologies,\n            state: project.state,\n            product: project.product\n        }, \n        { new: true, runValidators: true }, \n        callback\n    );\n}\n\nexport { getProjects, getProject, queryByArgs, createProject, deleteProject, updateProject };"]}